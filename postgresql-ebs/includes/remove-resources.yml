---
  - name: terminate ec2 by instance id
    amazon.aws.ec2_instance:
      access_key: "{{ assumed_role.sts_creds.access_key }}"
      secret_key: "{{ assumed_role.sts_creds.secret_key }}"
      session_token: "{{ assumed_role.sts_creds.session_token }}"
      instance_ids: "{{ instance_id }}"
      region: "{{ region }}"
      state: "absent"

  - name: remove key pair for instance
    amazon.aws.ec2_key:
      access_key: "{{ assumed_role.sts_creds.access_key }}"
      secret_key: "{{ assumed_role.sts_creds.secret_key }}"
      session_token: "{{ assumed_role.sts_creds.session_token }}"
      name: "{{ key_name }}-{{ target_ebs }}"
      state: "absent"

  - name: remove security group
    amazon.aws.ec2_security_group:
      access_key: "{{ assumed_role.sts_creds.access_key }}"
      secret_key: "{{ assumed_role.sts_creds.secret_key }}"
      session_token: "{{ assumed_role.sts_creds.session_token }}"
      name: "{{ ec2_sg_name }}"
      region: "{{ region }}"
      vpc_id: "{{ vpc_id }}"
      state: "absent"

  - name: remove postgres IAM role & instance profile
    community.aws.iam_role:
      access_key: "{{ assumed_role.sts_creds.access_key }}"
      secret_key: "{{ assumed_role.sts_creds.secret_key }}"
      session_token: "{{ assumed_role.sts_creds.session_token }}"
      name: "{{ iam_role_name }}-{{ target_ebs }}"
      region: "{{ region }}"
      delete_instance_profile: yes
      purge_policies: yes
      state: "absent"

  - name: remove deployment policy
    community.aws.iam_managed_policy:
      access_key: "{{ assumed_role.sts_creds.access_key }}"
      secret_key: "{{ assumed_role.sts_creds.secret_key }}"
      session_token: "{{ assumed_role.sts_creds.session_token }}"
      policy_name: "{{ deployment_policy_name }}"
      state: "absent"
...
