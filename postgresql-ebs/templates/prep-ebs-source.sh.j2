#!/bin/bash

ROOT_DIR="/postgres"
DATA_DIR="/postgres/data"
LOG_DIR="/postgres/log"

sudo systemctl stop postgresql

if [ ! -d "$ROOT_DIR" ]; then
  sudo mkdir "$ROOT_DIR"
fi
if [ ! -d "$DATA_DIR" ]; then
  sudo mkdir "$DATA_DIR"
fi
if [ ! -d "$LOG_DIR" ]; then
  sudo mkdir "$LOG_DIR"
fi

sudo cp -r /var/lib/pgsql/data /postgres

# implement backup
# create .pgpass in user's home directory
cat << EOF > ~/.pgpass
*:*:*:bkup_user:{{bkup_pass}}
EOF
# create cron job for backup
# command pg_basebackup -D backup -Ft -z -P
# followed by zip...?

# Configure PostgreSQL for replication
# the directories are specific for the version of postgres and linux 2 from AWS
sudo sed -i "s|#data_directory = 'ConfigDir'|data_directory = '$DATA_DIR'|" /var/lib/pgsql/data/postgresql.conf
sudo sed -i "s|#log_directory = 'log'|log_directory = '$LOG_DIR'|" /var/lib/pgsql/data/postgresql.conf
sudo sed -i "s/#wal_level = replica/wal_level = logical/" /var/lib/pgsql/data/postgresql.conf
sudo sed -i "s/#wal_log_hints = off/wal_log_hints = on/" /var/lib/pgsql/data/postgresql.conf
sudo sed -i "s/#max_replication_slots = 10/max_replication_slots = 10/" /var/lib/pgsql/data/postgresql.conf
sudo sed -i "s/#max_wal_senders = 10/max_wal_senders = 10/" /var/lib/pgsql/data/postgresql.conf
sudo sed -i "s/#cluster_name = ''/cluster_name = 'Metis'/" /var/lib/pgsql/data/postgresql.conf
sudo sed -i "s/#synchronous_standby_names = ''/synchronous_standby_names = 'ANY 1(Adrastea)'/" /var/lib/pgsql/data/postgresql.conf

#sudo sed -i "s/#cluster_name = ''/cluster_name = 'Adrastea'/" /var/lib/pgsql/data/postgresql.conf

# Set up access to postgres
#sudo sed -i "/# TYPE/a host replication {{rep_user}} 10.128.212.0/23 trust\n" /var/lib/pgsql/data/pg_hba.conf
sudo sed -i "/# TYPE/a host all all 10.128.210.0/23 md5\n" /var/lib/pgsql/data/pg_hba.conf
sudo sed -i "/# TYPE/a host all all 10.128.224.0/22 md5\n" /var/lib/pgsql/data/pg_hba.conf
sudo sed -i "/# TYPE/a host all replica_admin 10.128.212.0/23 md5\n" /var/lib/pgsql/data/pg_hba.conf
sudo sed -i "/# TYPE/a local all postgres trust\n" /var/lib/pgsql/data/pg_hba.conf

# sql statements to secure the instance
cat << EOF > ~/secure_installation.sql
ALTER USER postgres PASSWORD '{{root_password}}';
EOF

sudo chown -R postgres:postgres /postgres
sudo chmod -R 0700 /postgres/data

cat << EOF > ~/db_user.sql
CREATE ROLE {{adm_user}} WITH SUPERUSER LOGIN PASSWORD '{{adm_password}}';
CREATE ROLE {{rep_user}} WITH REPLICATION LOGIN PASSWORD '{{rep_password}}';
EOF

sudo systemctl start postgresql

psql -U postgres < ~/db_user.sql
psql -U postgres < ~/secure_installation.sql

# preparing network access and secure local postgres access
sudo sed -i "s/listen_addresses =/c\\\nlisten_addresses = '*'\n/g" /var/lib/pgsql/data/postgresql.conf
sudo sed -i "s|local all postgres trust|local all postgres md5" /var/lib/pgsql/data/pg_hba.conf

sudo systemctl restart postgresql

cat << EOF > ~/prep-ebs.txt
[status]
finished = true
EOF
