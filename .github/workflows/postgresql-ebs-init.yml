---
name: Initialise PostgreSQL EBS

permissions:
  id-token: write
  contents: write

on:
  workflow_dispatch:
    inputs:
      deploy-environment:
        type: choice
        description: Environment
        required: true
        options:
          - dev
          - staging
          - live
      ebs-set:
        type: choice
        description: Source or Source/Replica set
        required: true
        options:
          - source
          - replica
          - source-replica-set
      prefix:
        description: Prefix used for ebs (-source-ebs or -replica-ebs)
        required: true
      service:
        description: service name
        required: true

jobs:
# ------------------------------------------------------------------------------
# dev deployment
# ------------------------------------------------------------------------------
  ebs-initialise-source-dev:
    if: ${{ inputs.deploy-environment  == 'dev-ebs' }}
    runs-on: ubuntu-latest
    environment: ebs-dev
    steps:
      - name: checkout repo
        uses: actions/checkout@v3
        with:
          ref: "${{ github.event.inputs.branch }}"

      - name: install python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
          cache-dependency-path: '**/postgresql-ebs-req.txt'

      - run: pip install -r ${{ github.workspace }}/.github/workflows/postgresql-ebs-req.txt

      - name: set environment values for dev
        ansible.builtin.set_fact:
          aws_account_id: "${{ secrets.AWS_ACCOUNT_ID_DEV }}"
        when: inputs.deploy-environment == "dev"

      - name: set environment values for staging
        ansible.builtin.set_fact:
          aws_account_id: "${{ secrets.AWS_ACCOUNT_ID_STAGING }}"
        when: inputs.deploy-environment == "staging"

      - name: set environment values for live
        ansible.builtin.set_fact:
          aws_account_id: "${{ secrets.AWS_ACCOUNT_ID_LIVE }}"
        when: inputs.deploy-environment == "live"

      - name: run ansible playbook
        env:
          AWS_ACCOUNT_ID: "${{ aws_account_id }}"
          AWS_ROLE_ARN: "${{ secrets.AWS_ROLE_ARN_EBS_MGMT }}"
          EBS_PREFIX: "${{ inputs.prefix }}"
          SERVICE_NAME: "${{ inputs.service }}"
          ENVIRONMENT: "${{ inputs.deploy-environment }}"
        run: |
          cur_dir=$(pwd)
          cd $cur_dir/postgresql
          export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID_EBS }}
          export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY_EBS }}
          export AWS_DEFAULT_REGION=eu-west-2
          ansible-playbook -vvv playbook-ebs-init.yml
