---
name: Initialse PostgreSQL EBS

permissions:
  id-token: write
  contents: write

on:
  workflow_dispatch:
    inputs:
      deploy-environment:
        type: choice
        description: Environment
        required: true
        options:
        - dev-source

jobs:
# ------------------------------------------------------------------------------
# dev deployment
# ------------------------------------------------------------------------------
  ebs-initialise-source-dev:
    if: ${{ inputs.deploy-environment  == 'dev-source' }}
    runs-on: ubuntu-latest
    environment: ebs-dev
    steps:
      - name: checkout repo
        uses: actions/checkout@v3
        with:
          ref: "${{ github.event.inputs.branch }}"

      - name: install python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
          cache-dependency-path: '**/postgresql-ebs-req.txt'

      - run: pip install -r ${{ github.workspace }}/.github/workflows/postgresql-ebs-req.txt

      - name: run ansible playbook
        env:
          AWS_ROLE_ARN: ${{ secrets.AWS_ROLE_ARN_EBS_MGMT }}
          VPC_ID: ${{ secrets.VPC_ID }}
          SUBNET_ID: ${{ secrets.SUBNET_ID_2A }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          ANSIBLE_VAR_FILE: "vars_dev.yml"
        run: |
          cur_dir=$(pwd)
          cd $cur_dir/ebs
          export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          export AWS_DEFAULT_REGION=eu-west-2
          ansible-playbook --extra-vars "ansible_var_file='${{ env.ANSIBLE_VAR_FILE }}'" --private-key $cur_dir/${{ env.SSH_KEY_FILE }} ebs-playbook.yml
