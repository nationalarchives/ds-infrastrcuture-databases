---
name: Create PostgreSQL AMI

permissions:
  id-token: write
  contents: write

on:
  workflow_dispatch:
    inputs:
      deploy-environment:
        type: choice
        description: Environment
        required: true
        options:
          - dev
          - staging
          - live
      secrets-path:
        description: path of secret in AWS Secrets Manager
        required: true
      key-name:
        description: ssh key name used for accessing cluster
        require: true

jobs:
  ec2-initialise-source:
    if: ${{ inputs.deploy-environment  == 'dev' }}
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: checkout repo
        uses: actions/checkout@v3
        with:
          ref: "${{ github.event.inputs.branch }}"

      - name: install python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
          cache-dependency-path: '**/postgres-ec2-req.txt'

      - run: pip install -r ${{ github.workspace }}/.github/workflows/postgres-ec2-req.txt

      - name: run ansible playbook
        env:
          AWS_ACCOUNT_ID: "${{ secrets.AWS_ACCOUNT_ID_DEV }}"
          AWS_ROLE_ARN: "${{ secrets.AWS_ROLE_ARN_EBS_MGMT }}"
          SECRETS_PATH: "${{ inputs.secrets-path }}"
          KEY_NAME: "${{ inputs.key-name }}"
          ENVIRONMENT: "${{ inputs.deploy-environment }}"
        run: |
          cur_dir=$(pwd)
          cd $cur_dir/postgres-ec2
          export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID_EBS }}
          export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY_EBS }}
          export AWS_DEFAULT_REGION=eu-west-2
          export ANSIBLE_HOST_KEY_CHECKING=False
          ansible-playbook -vvv playbook-source-ec2.yml

...
