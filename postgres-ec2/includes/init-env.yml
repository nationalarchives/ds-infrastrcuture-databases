---
  - name: template instance role source
    vars:
      s3_deployment_bucket: "ds-{{ lookup( 'env', 'ENVIRONMENT') }}-deployment-source"
      s3_deployment_root: "{{ s3_deployment_root }}"
    template:
      src: "./templates/instance-role-policy.json.j2"
      dest: "./instance-role-policy.json"
      force: yes

  - name: create deployment policy
    community.aws.iam_managed_policy:
      access_key: "{{ assumed_role.sts_creds.access_key }}"
      secret_key: "{{ assumed_role.sts_creds.secret_key }}"
      session_token: "{{ assumed_role.sts_creds.session_token }}"
      policy_name: "{{ deployment_policy_name }}-{{ target_ebs }}"
      policy: "{{ lookup('file', './instance-role-policy.json') }}"
      state: "present"
    register: s3_policy

  - name: create postgres IAM role
    community.aws.iam_role:
      access_key: "{{ assumed_role.sts_creds.access_key }}"
      secret_key: "{{ assumed_role.sts_creds.secret_key }}"
      session_token: "{{ assumed_role.sts_creds.session_token }}"
      name: "{{ iam_role_name }}-{{ target_ebs }}"
      region: "{{ region }}"
      assume_role_policy_document: "{{ lookup('file', './templates/ec2-role-policy.json') }}"
      managed_policies: ["{{ s3_policy.policy.arn }}"]
      create_instance_profile: yes
      delete_instance_profile: yes
      purge_policies: yes
      state: "present"
    register: ec2_iam_role

  - name: create security group - allowing updates and downloads
    amazon.aws.ec2_security_group:
      access_key: "{{ assumed_role.sts_creds.access_key }}"
      secret_key: "{{ assumed_role.sts_creds.secret_key }}"
      session_token: "{{ assumed_role.sts_creds.session_token }}"
      name: "{{ ec2_sg_name }}-{{ target_ebs }}"
      description: "security group allowing updates and downloads"
      region: "{{ region }}"
      vpc_id: "{{ vpc_id }}"
      rules:
        - proto: "tcp"
          from_port: 22
          to_port: 22
          cidr_ip: "0.0.0.0/0"
          rule_desc: "allow incoming ssh connections"
        - proto: "tcp"
          from_port: 1024
          to_port: 65535
          cidr_ip: "0.0.0.0/0"
          rule_desc: "for updates and downloads"
      rules_egress:
        - proto: "tcp"
          from_port: 80
          to_port: 80
          cidr_ip: "0.0.0.0/0"
          rule_desc: "allow updates and downloads"
        - proto: "tcp"
          from_port: 443
          to_port: 443
          cidr_ip: "0.0.0.0/0"
          rule_desc: "allow updates and downloads"
        - proto: "tcp"
          from_port: 1024
          to_port: 65535
          cidr_ip: "0.0.0.0/0"
          rule_desc: "allow replies"
      state: "present"
    register: ec2_sec_group

  - name: copy key file from S3
    amazon.aws.s3_object:
      access_key: "{{ assumed_role.sts_creds.access_key }}"
      secret_key: "{{ assumed_role.sts_creds.secret_key }}"
      session_token: "{{ assumed_role.sts_creds.session_token }}"
      bucket: "ds-{{ lookup('env', 'ENVIRONMENT') }}-kpf-administration"
      object: "{{ key_name }}"
      dest: "{{ key_name }}"
      mode: get
...
