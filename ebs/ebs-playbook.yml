# EBS playbook
---
- name: Initialise PostgreSQL EBS
  hosts: localhost
  gather_facts: false

  tasks:
  - name: load variables
    ansible.builtin.include_vars:
      file: "{{ ansible_var_file }}"

  - name: get AWS session token
    community.aws.sts_session_token:
      duration_seconds: 3600
    register: session_credentials

  - name: switch role credentials
    community.aws.sts_assume_role:
      access_key: "{{ session_credentials.sts_creds.access_key }}"
      secret_key: "{{ session_credentials.sts_creds.secret_key }}"
      session_token: "{{ session_credentials.sts_creds.session_token }}"
      role_arn: "{{ lookup ('env', 'AWS_ROLE_ARN') }}"
      role_session_name: "s-devops"
    register: assumed_role

  - name: initialise environment
    ansible.builtin.include_tasks:
      file: initialise-environment.yml

  - name: set variables for source ebs
    set_fact:
      ebs_target_zone: "{{ zone_source }}"
      ebs_tag_name: "{{ lookup ('env', 'EBS_PREFIX') }}-source-ebs"
      subnet_id: "{{ subnet_id_a }}"

  - name: setup ebs
    ansible.builtin.include_tasks:
      file: setup-ebs.yml

  - name: launch temp instance
    ansible.builtin.include_tasks:
      file: temp-instance.yml

- name: switch to ec2hosts - checking if setup has finished
  hosts: ec2hosts
  gather_facts: false

  tasks:
  - name: load variables
    ansible.builtin.include_vars:
      file: "{{ ansible_var_file }}"

  - name: set ssh file
    ansible.builtin.set_fact:
      ansible_ssh_private_key_file: "/tmp/{{ key_name }}"

  - ansible.builtin.debug:
      msg:
        - "====================================================================="
        - "checking status of new instance before ami can be build"
        - "20 second interval with max duration of 5 minutes"
        - "====================================================================="

  - name: check if ec2 instance is ready
    ansible.builtin.stat:
      path: "/finish-init.txt"
    remote_user: ec2-user
    register: init_finished
    until: "init_finished.stat.exists"
    retries: 15
    delay: 20

  - name: Copy bash script to attach volume
    ansible.builtin.copy:
      src: ./attach-source-ebs.sh
      dest: /home/ec2-user/attach-source-ebs.sh
      owner: ec2-user
      group: ec2-user
      mode: '0744'

  - name: Copy bash script to prepare volume
    ansible.builtin.copy:
      src: ./prep-ebs-source.sh
      dest: /home/ec2-user/prep-ebs-source.sh
      owner: ec2-user
      group: ec2-user
      mode: '0744'

  - name: Run attachment script
    ansible.builtin.shell: |
      /home/ec2-user/attach-source-ebs.sh

  - name: Run preparation script
    ansible.builtin.shell: |
      /home/ec2-user/prep-ebs-source.sh

  ## create source ebs and instance to run initialisation of ebs as source db
  #- name: initialise source ebs
  #  any_errors_fatal: true
  #  block:
  #    ansible.builtin.include_tasks:
  #      file: initialise-ebs.yml


...
