# EBS playbook
---

- name: Initialise PostgreSQL EBS
  hosts: localhost
  gather_facts: false

  tasks:
    - name: initialise setup
      any_errors_fatal: true
      block:
      - name: load variables
        ansible.builtin.include_vars:
          file: "{{ ansible_var_file }}"

      - name: get AWS session token
        community.aws.sts_session_token:
          duration_seconds: 3600
        register: session_credentials

      - name: switch role credentials
        community.aws.sts_assume_role:
          access_key: "{{ session_credentials.sts_creds.access_key }}"
          secret_key: "{{ session_credentials.sts_creds.secret_key }}"
          session_token: "{{ session_credentials.sts_creds.session_token }}"
          role_arn: "{{ lookup ('env', 'AWS_ROLE_ARN') }}"
          role_session_name: "s-devops"
        register: assumed_role

      - ansible.builtin.debug:
          msg:
            - "====================================================================="
            - "{{ assumed_role }}"
            - "====================================================================="

      - name: set up ebs
        amazon.aws.ec2_vol:
          access_key: "{{ assumed_role.sts_creds.access_key }}"
          secret_key: "{{ assumed_role.sts_creds.secret_key }}"
          session_token: "{{ assumed_role.sts_creds.session_token }}"
          zone: "{{ zone_source }}"
          multi_attach: false
          volume_size: "{{ ebs_size }}"
          volume_type: "{{ ebs_type }}"
          encrypted: "{{ ebs_encryption }}"
          state: "present"
          tags:
            Name: "{{ ebs_tag_name }}"
        register: source_ebs

...
